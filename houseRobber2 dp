class Solution {
public:
    int solve(vector<int>& nums,int ind, vector<int> &dp){
        
        if(ind == 0){
            return nums[ind];
        }
        if(ind < 0) return 0;
        if(dp[ind] != -1)  return dp[ind];
        
              
        int pick = nums[ind] + solve(nums,ind-2,dp);        
        int notpick = 0 + solve(nums,ind-1,dp);
        
        return dp[ind] = max(pick,notpick);
    }
   
    int rob(vector<int>& nums) {
        
        int n = nums.size();
        vector<int> dp(n,-1);
        vector<int> dp1(n,-1);
        
        if(n == 1) return nums[n-1];
        
        int ans =  solve(nums,n-2,dp); 
        reverse(nums.begin(), nums.end());
        int ans1 = solve(nums,n-2,dp1);
         
        
        return max(ans,ans1);
    }
};
